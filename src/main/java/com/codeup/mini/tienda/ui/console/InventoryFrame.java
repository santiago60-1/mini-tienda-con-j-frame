/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.codeup.mini.tienda.ui.console;
import com.codeup.mini.tienda.domain.Appliances;
import com.codeup.mini.tienda.domain.Foods;
import com.codeup.mini.tienda.domain.Inventory;
import com.codeup.mini.tienda.domain.Products;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

/**
 *
 * @author Coder
 */
public class InventoryFrame extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(InventoryFrame.class.getName());
    Inventory inventory = new Inventory();

    
    
    /**
     * Creates new form InventoryFrame
     */
    public InventoryFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableInventory = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblCategory = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblProduct = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblPryce = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lblStock = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblCategorie = new javax.swing.JTextField();
        lblProductSearch = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JTextField();
        lblBuyProduct = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        lblStatics = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Categoria", "Nombre", "Precio", "Stock"
            }
        ));
        jScrollPane1.setViewportView(tableInventory);

        jLabel1.setText("Categoria");

        jLabel2.setText("Producto");

        jLabel3.setText("Precio");

        lblPryce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblPryceActionPerformed(evt);
            }
        });

        jLabel4.setText("Stock");

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Categoria");

        lblProductSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblProductSearchActionPerformed(evt);
            }
        });

        jLabel6.setText("Producto");

        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Producto");

        jLabel8.setText("Cantidad");

        jButton3.setText("Comprar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setText("Producto");

        jButton4.setText("Estadisticas");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Salir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(lblCategorie, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addComponent(lblProductSearch))
                            .addComponent(jButton2))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(lblQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                        .addComponent(lblBuyProduct))
                                    .addGap(41, 41, 41)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(lblStatics, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(38, 38, 38)
                                .addComponent(jButton4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(lblProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(lblCategory)
                            .addComponent(lblPryce)
                            .addComponent(lblStock))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addGap(54, 54, 54)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCategorie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBuyProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProductSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatics))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPryce, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(14, 14, 14)))
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblPryceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblPryceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblPryceActionPerformed

    private void lblProductSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblProductSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblProductSearchActionPerformed

    private void initializeTable(){
        tableInventory.setModel(new javax.swing.table.DefaultTableModel(
        new Object[][] {},
        new String [] {"Categoria,Nombre, Precio, Stock"}
                
        ));
    }
    
private void updateTable() {
    String[] columnas = {"Categoría", "Nombre", "Precio", "Stock"};
    ArrayList<Products> lista = inventory.getProducts();
    HashMap<String, Integer> stockMap = inventory.getStock(); 

    Object[][] datos = new Object[lista.size()][4];

    for (int i = 0; i < lista.size(); i++) {
        Products p = lista.get(i);
        datos[i][0] = p.getDescription(); // categoría
        datos[i][1] = p.getName();        // nombre
        datos[i][2] = p.getPrice();       // precio
        datos[i][3] = stockMap.getOrDefault(p.getName(), 0); // stock
    }

    tableInventory.setModel(new javax.swing.table.DefaultTableModel(datos, columnas));
}
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            
            String categories = lblCategory.getText().trim().toLowerCase();
            String name = lblProduct.getText().trim().toLowerCase();
            double price = Double.parseDouble(lblPryce.getText().trim());
            int stock = Integer.parseInt(lblStock.getText().trim());
            
            //Validaciones
            if (categories.isEmpty() || name.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Debe completar todos los campos");
                return;
            }
            if (price <= 0 || stock <= 0){
            javax.swing.JOptionPane.showMessageDialog(this, "el precio o el stock no pueden ser cero o menor a cero");
            return;
            }
            
            //Verificar duplicado
            for (Object[] fila : inventory.listProducts()){
                if (name.equalsIgnoreCase((String) fila [0])){
                    javax.swing.JOptionPane.showMessageDialog(this, "El producto ya existe en el inventario");
                    return;
                }
            }
            
            // Crear producto segun categoria
            Products nuevo;
            if (categories.equalsIgnoreCase("Electrodomestico")){
                nuevo = new Appliances(name, price);
            } else if(categories.equalsIgnoreCase("Alimento")){
                nuevo = new Foods(name, price);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Categoria invalida");
                return;
            }
            
            inventory.productAdd(nuevo, stock);
            
            javax.swing.JOptionPane.showMessageDialog(this, "Producto agregado correctamente");
            updateTable();
            
        }catch (NumberFormatException e){
            javax.swing.JOptionPane.showMessageDialog(this, "Precio y stock deben ser numericos");
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String category = lblCategorie.getText().trim().toLowerCase();
            String product = lblProductSearch.getText().trim().toLowerCase();

            if (category.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ingrese una categoría");
                return;
            }

            ArrayList<Object[]> results = new ArrayList<>();
            for (Object[] fila : inventory.listProducts()) {
                String name = ((String) fila[0]).toLowerCase();
                String categories = ((String) fila[3]).toLowerCase();

                // Si el producto está vacío, solo filtra por categoría
                if (product.isEmpty()) {
                    if (categories.contains(category)) {
                        results.add(fila);
                    }
                } else {
                    // Filtra por categoría Y por nombre
                    if (categories.contains(category) && name.contains(product)) {
                        results.add(fila);
                    }
                }
            }

            if (results.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "No se encontraron productos");
                return;
            }

            // Mostrar resultados en la tabla
            Object[][] dates = new Object[results.size()][4];
            for (int i = 0; i < results.size(); i++) {
                dates[i] = results.get(i);
            }

            String[] columns = {"Nombre", "Precio", "Stock", "Categoría"};
            tableInventory.setModel(new javax.swing.table.DefaultTableModel(dates, columns));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            
            String purchase = lblBuyProduct.getText().toString();
            int quantity = Integer.parseInt(lblQuantity.getText().toString());
            
            boolean success = inventory.productBuy(purchase, quantity);
            String succesRegister = inventory.generateTicket();
            
            if (success){
                javax.swing.JOptionPane.showMessageDialog(this, "Compra realizada correctamente");
                updateTable();
            } else{
                javax.swing.JOptionPane.showMessageDialog(this, "No se realizo la compra");
            }
            
            
            
        } catch(NumberFormatException e){
            javax.swing.JOptionPane.showMessageDialog(this, "Ingresa valores numericos");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

try {
        List<Object[]> products = inventory.listProducts();

        if (products == null || products.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "No hay productos en el inventario");
            return;
        }

        Object[] cheap = null;
        Object[] expensive = null;

        for (Object[] fila : products) {
            if (fila == null || fila.length < 4) continue;

            Object priceObj = fila[1]; // precio está en índice 1 según tu tabla
            if (priceObj == null) continue;

            double price;
            try {
                price = Double.parseDouble(priceObj.toString());
            } catch (NumberFormatException e) {
                System.err.println("⚠️ Precio inválido en fila: " + Arrays.toString(fila));
                continue;
            }

            if (cheap == null || price < Double.parseDouble(cheap[1].toString())) {
                cheap = fila;
            }

            if (expensive == null || price > Double.parseDouble(expensive[1].toString())) {
                expensive = fila;
            }
        }

        if (cheap == null || expensive == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "No se encontraron productos válidos");
            return;
        }

        Object[][] datos;
        if (Arrays.equals(cheap, expensive)) {
            datos = new Object[1][4];
            datos[0] = cheap;
        } else {
            datos = new Object[2][4];
            datos[0] = cheap;
            datos[1] = expensive;
        }

        String[] columnas = {"Nombre", "Precio", "Stock", "Categoría"};
        tableInventory.setModel(new javax.swing.table.DefaultTableModel(datos, columnas));

    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "❌ Error inesperado al mostrar estadísticas: " + e.getMessage());
        e.printStackTrace();
    }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try{
         
            String summary = inventory.generateTicket();
            javax.swing.JOptionPane.showMessageDialog(this, summary);
            
            dispose();
            
        }catch(NumberFormatException e)
        {}
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new InventoryFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField lblBuyProduct;
    private javax.swing.JTextField lblCategorie;
    private javax.swing.JTextField lblCategory;
    private javax.swing.JTextField lblProduct;
    private javax.swing.JTextField lblProductSearch;
    private javax.swing.JTextField lblPryce;
    private javax.swing.JTextField lblQuantity;
    private javax.swing.JLabel lblStatics;
    private javax.swing.JTextField lblStock;
    private javax.swing.JTable tableInventory;
    // End of variables declaration//GEN-END:variables
}
